"use strict";
/**
 * @license
 * Copyright 2018 Palantir Technologies, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var ConjureErrorType;
(function (ConjureErrorType) {
    ConjureErrorType["Network"] = "NETWORK";
    ConjureErrorType["Other"] = "OTHER";
    ConjureErrorType["Parse"] = "PARSE";
    ConjureErrorType["Status"] = "STATUS";
})(ConjureErrorType = exports.ConjureErrorType || (exports.ConjureErrorType = {}));
var ConjureError = /** @class */ (function () {
    function ConjureError(errorType, originalError, status, body) {
        this.type = errorType;
        this.originalError = originalError;
        this.status = status;
        this.body = body;
    }
    ConjureError.prototype.toString = function () {
        return JSON.stringify({
            body: this.body,
            originalError: this.originalError && this.originalError.toString(),
            status: this.status,
            type: this.type,
        }, null, "  ");
    };
    return ConjureError;
}());
exports.ConjureError = ConjureError;
function isConjureError(error) {
    return (error instanceof ConjureError ||
        (error.__proto__ && error.__proto__.constructor && error.__proto__.constructor.name === ConjureError.name));
}
exports.isConjureError = isConjureError;
//# sourceMappingURL=error.js.map